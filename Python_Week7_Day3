# Group-4 :  Rawan Alsaedi- Abeer Alharbi- Reem Alamri - Shikhah Alhuzimi
#
## Assignment: Intermediate Functions I--------------------------------------
import random
def randInt(min=0  , max=100):
    num = random.randint(min,max)
    return num
print(randInt()) 		    # should print a random integer between 0 to 100
print(randInt(max=50)) 	    # should print a random integer between 0 to 50
print(randInt(min=50)) 	    # should print a random integer between 50 to 100
print(randInt(min=50, max=500))    # should print a random integer between 50 and 500

## OPTIONAL Assignment: Intermediate Functions II-------------------------------
##1..
#Update Values in Dictionaries and Lists
#1.1 Change the value 10 in x to 15. Once you're done, x should now be [ [5,2,3], [15,8,9] ].

x = [[5,2,3], [10,8,9]]
x[1][0]=15
print(f"After the update x become now is: {x}")


#1.2 Change the last_name of the first student from 'Jordan' to 'Bryant'
students = [
    {'first_name':  'Michael', 'last_name' : 'Jordan'},
    {'first_name' : 'John', 'last_name' : 'Rosales'}
]
students[0]['last_name'] = 'Bryant'
print(f"After update student 1,the student 1 information become : {students[0]}")
print(f"The students new information is : {students}")


#1.3 In the sports_directory, change 'Messi' to 'Andres'
sports_directory = {
    'basketball' : ['Kobe', 'Jordan', 'James', 'Curry'],
    'soccer' : ['Messi', 'Ronaldo', 'Rooney']
}
print(f"Before update  the sports directory orginal information was : {sports_directory}")
sports_directory['soccer'][0] = 'Andres'
print(f"After update the sports directory information become is: {sports_directory}")


#1.4 Change the value 20 in z to 30

z = [{'x': 10, 'y': 20}] 
z[0]['y'] = 30
print(f"Z list new information is : {z}")

##2..
##Iterate Through a List of Dictionaries

def iterateDictionary(List):
    s= ''
    for x in List:
        s += f"first_name - {x['first_name']}, last_name - {x['last_name']}\n"
    return s
    
students = [
         {'first_name':  'Michael', 'last_name' : 'Jordan'},
         {'first_name' : 'John', 'last_name' : 'Rosales'},
         {'first_name' : 'Mark', 'last_name' : 'Guillen'},
         {'first_name' : 'KB', 'last_name' : 'Tonel'}
    ]
print(iterateDictionary(students)) 

##3..
##Get Values From a List of Dictionaries
def iterateDictionary2(key_name, students) :
    for index in range(len(students)):
        for key in students[index]:
            if(key_name==key):
                print(students[index][key])
                
iterateDictionary2('first_name', students)  
iterateDictionary2('last_name', students) 

##4..
##Iterate Through a Dictionary with List Values

def printInfo(dojo):
    for key in dojo:
        print(len(dojo[key]),key)
        for value in dojo[key]:
            print(value)

dojo = {
   'locations': ['San Jose', 'Seattle', 'Dallas', 'Chicago', 'Tulsa', 'DC', 'Burbank'],
   'instructors': ['Michael', 'Amy', 'Eduardo', 'Josh', 'Graham', 'Patrick', 'Minh', 'Devon']
}
printInfo(dojo)

##Monte Carlo Simulation Assignment-------------------------------------
import random as rng
import numpy as np
import matplotlib.pyplot as plt


def Monte_Carlo_Simulation(percent,pepole):
    #we use while to find corect number of pepole achieve percent.
    while_lock=0
    while(while_lock==0):
        results =np.array([]) # array to store probability of each sample.
        for x in range(1000):# loop number of sampels 
            #set random birthday for each person. 
            p_bar = np.random.choice(range(1,366),size=pepole, replace=True)
            # check if we have tow pepole have same birthday or not.
            if len(p_bar)!=len(set(p_bar)):
                results = np.append(results,1)
            else:
                results = np.append(results,0)  
        #check percent of probability is greater than or equal percent that send in function.
        if (results.mean())>=percent:
            while_lock=1 # exit from while loop.
            
        #if we do not achieve percent, increase number of people. 
        pepole+=1 
    return(pepole)

print("Minimum number of people matching birthdays:" )     
print("Probability of 50% ", Monte_Carlo_Simulation(.50,2))
print("Probability of 95%:", Monte_Carlo_Simulation(.95,2))
print("Probability of 99%:", Monte_Carlo_Simulation(.99,2))
