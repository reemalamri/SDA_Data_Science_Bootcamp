import pandas as pd
import numpy as np
import requests

# Explore the UCI Repository and:

# Load 3 dataset and their appropriate column names.

# 1.   Poker Hand Data Set
#Purpose is to predict poker hands

pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/poker/poker-hand-training-true.data")

s="""
1) S1: "Suit of card #1"
2) C1: "Rank of card #1"
3) S2: "Suit of card #2"
4) C2: "Rank of card #2"
5) S3: "Suit of card #3"
6) C3: "Rank of card #3"
7) S4: "Suit of card #4"
8) C4: "Rank of card #4"
9) S5: "Suit of card #5"
10) C5: "Rank of card 5"
11) CLASS: "Poker Hand"
"""

ls = s.split("\n")

ls_col_names = []

for x in range(1, len(ls)-1):
    ls_col_names.append(ls[x].split()[1][:-1])

ls_col_names

Poker_Hand_df=pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/poker/poker-hand-training-true.data", names=ls_col_names)
Poker_Hand_df


# 2.   Chess (King-Rook vs. King) Data Set
#Chess Endgame Database for White King and Rook against Black King (KRK)



pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/chess/king-rook-vs-king/krkopt.data")

s2="""
1. White King file
2. White King rank
3. White Rook file
4. White Rook rank
5. Black King file
6. Black King rank
7. optimal depth-of-win
"""

ls2 = s2.split("\n")

ls2_col_names = []

for x in range(1, len(ls2)-1):
  sentence=ls2[x].split()[1:4][:]
  ls2_col_names.append('_'.join(sentence))

ls2_col_names

Chess_df=pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/chess/king-rook-vs-king/krkopt.data", names=ls2_col_names)
Chess_df




#3.  Tic-Tac-Toe Endgame Data Set
#Binary classification task on possible configurations of tic-tac-toe game




pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/tic-tac-toe/tic-tac-toe.data")

s3="""
1. top-left-square: {x,o,b}
2. top-middle-square: {x,o,b}
3. top-right-square: {x,o,b}
4. middle-left-square: {x,o,b}
5. middle-middle-square: {x,o,b}
6. middle-right-square: {x,o,b}
7. bottom-left-square: {x,o,b}
8. bottom-middle-square: {x,o,b}
9. bottom-right-square: {x,o,b}
10. Class: {positive,negative}
"""

ls3 = s3.split("\n")

ls3_col_names = []

for x in range(1, len(ls3)-1):
  ls3_col_names.append(ls3[x].split()[1][:-1])

ls3_col_names 

Tic_Tac_Toe_df=pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/tic-tac-toe/tic-tac-toe.data", names=ls3_col_names)
Tic_Tac_Toe_df



---
## Choose one dataset and show what each column means.

Poker_Hand_df

#We have 10 columns represent two attributes(suit and rank) for the player's 5 cards.


---



# Explore the API we used and load the most recent data from Saudi Arabia.

PATH_API = 'https://docs.openaq.org/v2/cities?limit=100&page=1&offset=0&sort=asc&country_id=SA&order_by=city'

r = requests.get(PATH_API)
data = r.json()
data.keys()

data["results"]

df = pd.DataFrame(data["results"])


### What cities are in the data?

df["city"].unique()

#just one city : Dharan


---

### How many rows and columns are in the data?


df.shape

#2 rows and 7 columns
